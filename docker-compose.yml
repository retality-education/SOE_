version: '3.8'

services:
  dotnet_app:
    build:
      context: ./SOE
      dockerfile: Dockerfile
    container_name: soe_dotnet_app
    depends_on:
      - postgres
      - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Postgres=Host=postgres;Port=5432;Database=EmotionalMessenger;Username=postgres;Password=12345
      - ConnectionStrings__Redis=redis:6379,abortConnect=false
    ports:
      - "5000:5000"
    platform: linux/amd64
    networks:
      - app_network
    healthcheck:
      disable: false
      test: ["CMD-SHELL", "curl -f http://localhost:5000/healthy || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    
  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: soe_postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: EmotionalMessenger
    platform: linux/amd64
    networks:
      - app_network

  redis:
    image: redis:7-alpine
    container_name: soe_redis
    ports:
      - "6379:6379"
    platform: linux/amd64
    networks:
      - app_network

  emotion_service:
    build:
      context: ./emotion_service
      dockerfile: Dockerfile
    container_name: emotion_service
    ports:
      - "5001:5001"
    platform: linux/amd64
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - app_network
    restart: unless-stopped
    
volumes:
  postgres:
networks:
  app_network:
    name: soe__app_network
    driver: bridge